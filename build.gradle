plugins {
	id 'com.github.johnrengelman.shadow' version '5.0.0'
	id 'java'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/test-integration/java')
		}
		resources.srcDir file('src/test-integration/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
	useJUnitPlatform()
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

group = 'lt.gzeskas'
version = '0.0.1-SNAPSHOT'

jar {
	manifest {
		attributes 'Main-Class': 'lt.gzeskas.payment.PaymentApplicationMain'
	}
}

repositories {
	mavenCentral()
}

ext {
	logbackVersion = "1.2.3"
	junitJupiterVersion = "5.4.0"
	jettyVersion = "9.4.15.v20190215"
	jerseyVersion = "2.28"
	jacksonVersion = "2.9.8"
}
dependencies {
	//Logging
	compile("org.slf4j:slf4j-api:1.7.26")
	compile("ch.qos.logback:logback-core:$logbackVersion")
	runtime("ch.qos.logback:logback-classic:$logbackVersion")

	//H2 in memory database
	runtime("com.h2database:h2:1.4.199")

	//HTTP server
	compile("org.eclipse.jetty:jetty-server:$jettyVersion")
	compile("org.eclipse.jetty:jetty-servlet:$jettyVersion")

	//Jackson
	compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
	compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")


	//Test dependencies
	testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
	integrationTestCompile("com.squareup.okhttp:okhttp:2.7.5")
}


test {
	useJUnitPlatform()
}
